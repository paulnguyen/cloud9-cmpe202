
public aspect TracingAspect {
	private int callDepth;

	// trace all methods
	pointcut traced() : !within(TracingAspect) && execution(* Foo.*(..)) && !execution (* Account.toString(..)) ;

	// before advice -- thisJoinPoint is a special object that contains 
	//                  information about the join point
	before() : traced() {
		Object source = thisJoinPoint.getThis() ;
		Object target = thisJoinPoint.getTarget();	
		System.out.println( source + " --> " + target ) ;
		print("Before", thisJoinPoint); 
        System.out.println("entering: " + thisJoinPoint);
        System.out.println("  w/args: " + thisJoinPoint.getArgs());
        System.out.println("      at: " + thisJoinPoint.getSourceLocation());
		callDepth++;
	}

	// after advice
	after() : traced() {		
		callDepth--;
		print("After", thisJoinPoint);
	}

	// plain old java code
	private void print(String prefix, Object message) {
		for (int i = 0; i < callDepth; i++) {
			System.out.print(" ");
		}
		System.out.println(prefix + ": " + message);
	}
}
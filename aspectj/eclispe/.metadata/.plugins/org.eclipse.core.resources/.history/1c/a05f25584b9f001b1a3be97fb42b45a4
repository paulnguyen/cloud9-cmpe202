
public aspect AuditAspect {

	Log audit = new Log() ;
	
	pointcut accountOperation() : call (* Account.*(..)) && !call(* Account.toString()) ;
	pointcut accountExecution() : execution (* Account.*(..)) && !execution (* Account.toString(..)) ;
	pointcut marker() : call(@Marker * * Account.*()) ;
	
	before() : accountOperation() {
		Object target = thisJoinPoint.getTarget();
		audit.store("Before: " + thisJoinPoint + " Target: " + target ) ;
	}
	
	after() : accountExecution() {
		Object target = thisJoinPoint.getTarget();
		audit.store("After: " + thisJoinPoint + " Target: " + target ) ;
	}
	
	around() : marker() {
		
	}
	
	Object around(): demoExecs() && !execution(* go()) && goCut() {
		println("Intercepted message: " +
				thisJoinPointStaticPart.getSignature().getName());
		println("in class: " +
		          thisJoinPointStaticPart.getSignature().getDeclaringType().getName());
		printParameters(thisJoinPoint);
		println("Running original method: \n" );
		Object result = proceed();
		println("  result: " + result );
		return result;
	}	
		
}
